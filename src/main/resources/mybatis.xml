<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!-- 注册db.properties属性文件 -->
    <!--作用就是注册db.properties属性文件，这样子就可以获取里面的数据库信息了。-->
    <properties resource="db.properties"/>

    <!--开启侵入式延迟-->
    <!--在mybatis.xml文件中添加下面内容，注意该内容的位置一定要在properties与typeAliases之间，在mybatis.xml配置文件中，有些标签是需要按照顺序编写的：-->

    <!--&lt;!&ndash;全局参数设置&ndash;&gt;-->
    <!--<settings>-->
        <!--&lt;!&ndash;延迟加载总开关&ndash;&gt;-->
        <!--<setting name="lazyLoadingEnabled" value="true"/>-->
        <!--&lt;!&ndash;侵入式延迟加载开关&ndash;&gt;-->
        <!--&lt;!&ndash;3.4.1版本之前默认是true，之后默认是false&ndash;&gt;-->
        <!--<setting name="aggressiveLazyLoading" value="true"/>-->
    <!--</settings>-->



    <!--注册实体类（JavaBean）的全限定性类名的别名-->
    <!--因为在写mapper配置文件的时候，需要写上一些javabean类的全限定名-->
    <!--，这样子就不太方便，此时就可以使用typeAliases标签设置该javabean类的别名，-->
    <!--这样子就不用再写包名了，减少冗余-->
    <!--<typeAliases>-->
        <!--<typeAlias type="com.example.mybatis_sd.bean.Student" alias="student"/>-->
    <!--</typeAliases>-->

    <!--上面的是第一种方式，倘若有个多个javabean的话，需要写多个typeAlias，此时我们可以使用package指定一个包名，mybatis会在这个包名下搜索需要的JavaBean。-->

    <typeAliases>
        <package name="com.example.mybatis_sd.bean"/>
    </typeAliases>

    <!--指定默认数据库，如可选线上和开发-->
    <!--transactionManager标签-->
    <!--该标签用于指定MyBatis所使用的事务管理器。 MyBatis 支持两种事务管理器类型：-->
    <!--JDBC-->
    <!--该事务器就是我们之前通过Connection的commit()方法提交，通过rollback()方法回滚，默认是需要手动提交的。-->
    <!--MANAGED-->
    <!--由容器来管理事务的整个事务的生命周期，默认情况下会关闭连接，将来学习spring框架之后，就不用在配置事务管理器了，spring会使用自带的管理器。-->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!--注册映射文件-->
        <mapper resource="com/example/mybatis_sd/dao/StudentMapper.xml"/>
    </mappers>

</configuration>